[
    {
        "label": "rclpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "rclpy",
        "description": "rclpy",
        "detail": "rclpy",
        "documentation": {}
    },
    {
        "label": "Node",
        "importPath": "rclpy.node",
        "description": "rclpy.node",
        "isExtraImport": true,
        "detail": "rclpy.node",
        "documentation": {}
    },
    {
        "label": "math",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "math",
        "description": "math",
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "PriorityQueue",
        "importPath": "queue",
        "description": "queue",
        "isExtraImport": true,
        "detail": "queue",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "nav_msgs.msg",
        "description": "nav_msgs.msg",
        "isExtraImport": true,
        "detail": "nav_msgs.msg",
        "documentation": {}
    },
    {
        "label": "OccupancyGrid",
        "importPath": "nav_msgs.msg",
        "description": "nav_msgs.msg",
        "isExtraImport": true,
        "detail": "nav_msgs.msg",
        "documentation": {}
    },
    {
        "label": "PoseStamped",
        "importPath": "geometry_msgs.msg",
        "description": "geometry_msgs.msg",
        "isExtraImport": true,
        "detail": "geometry_msgs.msg",
        "documentation": {}
    },
    {
        "label": "CreatePlan",
        "importPath": "create_plan_msgs.srv",
        "description": "create_plan_msgs.srv",
        "isExtraImport": true,
        "detail": "create_plan_msgs.srv",
        "documentation": {}
    },
    {
        "label": "BasicNavigator",
        "importPath": "nav2_simple_commander.robot_navigator",
        "description": "nav2_simple_commander.robot_navigator",
        "isExtraImport": true,
        "detail": "nav2_simple_commander.robot_navigator",
        "documentation": {}
    },
    {
        "label": "AStarNode",
        "kind": 6,
        "importPath": "path_planner_node",
        "description": "path_planner_node",
        "peekOfCode": "class AStarNode:\n    \"\"\"A* algorithm node with position and cost tracking for pathfinding.\"\"\"\n    _node_count = 0\n    def __init__(self, position, g_cost=float('inf'), h_cost=0):\n        \"\"\"Initialize node with position and path costs.\"\"\"\n        self.position = position\n        self.g_cost = g_cost\n        self.h_cost = h_cost\n        self.parent = None\n        self.id = AStarNode._node_count",
        "detail": "path_planner_node",
        "documentation": {}
    },
    {
        "label": "PathPlannerNode",
        "kind": 6,
        "importPath": "path_planner_node",
        "description": "path_planner_node",
        "peekOfCode": "class PathPlannerNode(Node):\n    \"\"\"ROS2 path planning node implementing A* search algorithm.\"\"\"\n    def __init__(self):\n        \"\"\"Initialize planner with navigation and service setup.\"\"\"\n        super().__init__(\"path_planner_node\")\n        self.basic_navigator = BasicNavigator()\n        self.srv = self.create_service(CreatePlan, 'create_plan', self.create_plan_cb)\n        self.resolution = 0.05\n    def create_plan_cb(self, request, response):\n        \"\"\"Handle path planning service requests.\"\"\"",
        "detail": "path_planner_node",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "path_planner_node",
        "description": "path_planner_node",
        "peekOfCode": "def main(args=None):\n    \"\"\"Entry point for the path planner node.\"\"\"\n    rclpy.init(args=args)\n    node = PathPlannerNode()\n    rclpy.spin(node)\n    rclpy.shutdown()\nif __name__ == '__main__':\n    main()",
        "detail": "path_planner_node",
        "documentation": {}
    }
]